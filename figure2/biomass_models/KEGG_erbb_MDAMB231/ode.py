from .name2idx import C, V
from .reaction_network import ReactionNetwork


class DifferentialEquation(ReactionNetwork):
    def __init__(self, perturbation):
        super(DifferentialEquation, self).__init__()
        self.perturbation = perturbation

    def diffeq(self, t, y, *x):
        """Kinetic equations"""
        v = self.flux(t, y, x)

        if self.perturbation:
            for i, dv in self.perturbation.items():
                v[i] = v[i] * dv

        dydt = [0] * V.NUM
        dydt[V.EGFR_EGFR] = - v[1] + v[2] - v[13] - v[20] - v[23] - v[28] - v[29]
        dydt[V.a_EGFR_EGFR] = + v[1] - v[2] + v[13] + v[20] + v[23] + v[28] + v[29] - v[112]
        dydt[V.ERBB4_ERBB4] = - v[3] + v[4] - v[9] - v[14] - v[17] - v[21] - v[24] - v[26]
        dydt[V.a_ERBB4_ERBB4] = + v[3] - v[4] + v[9] + v[14] + v[17] + v[21] + v[24] + v[26]
        dydt[V.ERBB4_ERBB2] = - v[5] + v[6] - v[12] - v[15] - v[19] - v[22] - v[25] - v[27]
        dydt[V.a_ERBB4_ERBB2] = + v[5] - v[6] + v[12] + v[15] + v[19] + v[22] + v[25] + v[27]
        dydt[V.ERBB3_ERBB3] = - v[7] + v[8] - v[16]
        dydt[V.a_ERBB3_ERBB3] = + v[7] - v[8] + v[16]
        dydt[V.ERBB3_ERBB2] = - v[10] + v[11] - v[18]
        dydt[V.a_ERBB3_ERBB2] = + v[10] - v[11] + v[18]
        dydt[V.SHC2_SHC4_SHC3_SHC1] = - v[30] + v[31] - v[47] - v[48] - v[53] - v[58]
        dydt[V.a_SHC2_SHC4_SHC3_SHC1] = + v[30] - v[31] + v[47] + v[48] + v[53] + v[58]
        dydt[V.GRB2] = - v[32] + v[33] - v[46] - v[49] - v[54] - v[59] - v[61]
        dydt[V.a_GRB2] = + v[32] - v[33] + v[46] + v[49] + v[54] + v[59] + v[61]
        dydt[V.PLCG1_PLCG2] = - v[34] + v[35]
        dydt[V.a_PLCG1_PLCG2] = + v[34] - v[35]
        dydt[V.CBL_CBLB] = - v[36] + v[37]
        dydt[V.a_CBL_CBLB] = + v[36] - v[37]
        dydt[V.STAT5A_STAT5B] = - v[38] + v[39] - v[52] - v[56]
        dydt[V.a_STAT5A_STAT5B] = + v[38] - v[39] + v[52] + v[56]
        dydt[V.CRK_CRKL] = - v[40] + v[41]
        dydt[V.a_CRK_CRKL] = + v[40] - v[41]
        dydt[V.SRC] = - v[42] + v[43]
        dydt[V.a_SRC] = + v[42] - v[43]
        dydt[V.NCK1_NCK2] = - v[44] + v[45]
        dydt[V.a_NCK1_NCK2] = + v[44] - v[45]
        dydt[V.PIK3CA_PIK3CB_PIK3CD_PIK3R1_PIK3R2_PIK3R3] = - v[50] + v[51] - v[55] - v[57] - v[60] - v[72]
        dydt[V.a_PIK3CA_PIK3CB_PIK3CD_PIK3R1_PIK3R2_PIK3R3] = + v[50] - v[51] + v[55] + v[57] + v[60] + v[72]
        dydt[V.AKT3_AKT1_AKT2] = - v[62] + v[63]
        dydt[V.a_AKT3_AKT1_AKT2] = + v[62] - v[63] - v[113]
        dydt[V.SOS1_SOS2] = - v[64] + v[65]
        dydt[V.a_SOS1_SOS2] = + v[64] - v[65]
        dydt[V.GAB1] = - v[66] + v[67]
        dydt[V.a_GAB1] = + v[66] - v[67]
        dydt[V.CAMK2A_CAMK2B_CAMK2D_CAMK2G] = - v[68] + v[69]
        dydt[V.a_CAMK2A_CAMK2B_CAMK2D_CAMK2G] = + v[68] - v[69]
        dydt[V.PRKCA_PRKCB_PRKCG] = - v[70] + v[71]
        dydt[V.a_PRKCA_PRKCB_PRKCG] = + v[70] - v[71]
        dydt[V.MTOR] = - v[73] + v[74]
        dydt[V.a_MTOR] = + v[73] - v[74]
        dydt[V.BAD] = - v[75] + v[76]
        dydt[V.a_BAD] = + v[75] - v[76]
        dydt[V.GSK3B] = - v[77] + v[78]
        dydt[V.a_GSK3B] = + v[77] - v[78]
        dydt[V.CDKN1B] = - v[79] + v[80]
        dydt[V.a_CDKN1B] = + v[79] - v[80]
        dydt[V.CDKN1A] = - v[81] + v[82]
        dydt[V.a_CDKN1A] = + v[81] - v[82]
        dydt[V.PAK4_BUB1B_PAK6_PAK1_PAK2_PAK3_PAK6_PAK5] = - v[83] + v[84]
        dydt[V.a_PAK4_BUB1B_PAK6_PAK1_PAK2_PAK3_PAK6_PAK5] = + v[83] - v[84]
        dydt[V.HRAS_KRAS_NRAS] = - v[85] + v[86]
        dydt[V.a_HRAS_KRAS_NRAS] = + v[85] - v[86]
        dydt[V.ABL1_ABL2] = - v[87] + v[88]
        dydt[V.a_ABL1_ABL2] = + v[87] - v[88]
        dydt[V.PTK2] = - v[89] + v[90]
        dydt[V.a_PTK2] = + v[89] - v[90]
        dydt[V.ARAF_RAF1_BRAF] = - v[91] + v[92]
        dydt[V.a_ARAF_RAF1_BRAF] = + v[91] - v[92]
        dydt[V.RPS6KB1_RPS6KB2] = - v[93] + v[94]
        dydt[V.a_RPS6KB1_RPS6KB2] = + v[93] - v[94]
        dydt[V.EIF4EBP1] = - v[95] + v[96]
        dydt[V.a_EIF4EBP1] = + v[95] - v[96]
        dydt[V.MAP2K7_MAP2K4] = - v[97] + v[98]
        dydt[V.a_MAP2K7_MAP2K4] = + v[97] - v[98]
        dydt[V.MAP2K1_MAP2K2] = - v[99] + v[100]
        dydt[V.a_MAP2K1_MAP2K2] = + v[99] - v[100]
        dydt[V.MAPK8_MAPK9_MAPK10] = - v[101] + v[102]
        dydt[V.a_MAPK8_MAPK9_MAPK10] = + v[101] - v[102]
        dydt[V.MAPK1_MAPK3] = - v[103] + v[104]
        dydt[V.a_MAPK1_MAPK3] = + v[103] - v[104] - v[114]
        dydt[V.JUN] = - v[105] + v[106]
        dydt[V.a_JUN] = + v[105] - v[106]
        dydt[V.ELK1] = - v[107] + v[108] - v[111]
        dydt[V.a_ELK1] = + v[107] - v[108] + v[111]
        dydt[V.MYC] = - v[109] + v[110]
        dydt[V.a_MYC] = + v[109] - v[110] - v[115]

        return dydt


def param_values():
    """Parameter values"""
    x = [1] * C.NUM
    x[C.V1] = 0
    x[C.K1] = 1
    x[C.V2] = 0.1
    x[C.K2] = 10
    x[C.V3] = x[C.V1]
    x[C.K3] = x[C.K1]
    x[C.V4] = 0.5
    x[C.K4] = 10
    x[C.V5] = x[C.V1]
    x[C.K5] = x[C.K1]
    x[C.V6] = 0.5
    x[C.K6] = 10
    x[C.V7] = x[C.V1]
    x[C.K7] = x[C.K1]
    x[C.V8] = 0.5
    x[C.K8] = 10
    x[C.V9] = x[C.V1]
    x[C.K9] = x[C.K1]
    x[C.V10] = x[C.V1]
    x[C.K10] = x[C.K1]
    x[C.V11] = 0.5
    x[C.K11] = 10
    x[C.V12] = x[C.V1]
    x[C.K12] = x[C.K1]
    x[C.V13] = x[C.V1]
    x[C.K13] = x[C.K1]
    x[C.V14] = x[C.V1]
    x[C.K14] = x[C.K1]
    x[C.V15] = x[C.V1]
    x[C.K15] = x[C.K1]
    x[C.V16] = 0.1
    x[C.K16] = 10
    x[C.V17] = 0.1
    x[C.K17] = 10
    x[C.V18] = 0.1
    x[C.K18] = 10
    x[C.V19] = 0.1
    x[C.K19] = 10
    x[C.V20] = x[C.V1]
    x[C.K20] = x[C.K1]
    x[C.V21] = x[C.V1]
    x[C.K21] = x[C.K1]
    x[C.V22] = x[C.V1]
    x[C.K22] = x[C.K1]
    x[C.V23] = x[C.V1]
    x[C.K23] = x[C.K1]
    x[C.V24] = x[C.V1]
    x[C.K24] = x[C.K1]
    x[C.V25] = x[C.V1]
    x[C.K25] = x[C.K1]
    x[C.V26] = x[C.V1]
    x[C.K26] = x[C.K1]
    x[C.V27] = x[C.V1]
    x[C.K27] = x[C.K1]
    x[C.V28] = x[C.V1]
    x[C.K28] = x[C.K1]
    x[C.V29] = 0.1
    x[C.K29] = 10
    x[C.V30] = 0.1
    x[C.K30] = 10
    x[C.V31] = 0.1
    x[C.K31] = 10
    x[C.V32] = 0.1
    x[C.K32] = 10
    x[C.V33] = 0.1
    x[C.K33] = 10
    x[C.V34] = x[C.V1]
    x[C.K34] = x[C.K1]
    x[C.V35] = x[C.V2]
    x[C.K35] = x[C.K2]
    x[C.V36] = x[C.V1]
    x[C.K36] = x[C.K1]
    x[C.V37] = x[C.V2]
    x[C.K37] = x[C.K2]
    x[C.V38] = x[C.V1]
    x[C.K38] = x[C.K1]
    x[C.V39] = x[C.V2]
    x[C.K39] = x[C.K2]
    x[C.V40] = x[C.V1]
    x[C.K40] = x[C.K1]
    x[C.V41] = x[C.V2]
    x[C.K41] = x[C.K2]
    x[C.V42] = x[C.V1]
    x[C.K42] = x[C.K1]
    x[C.V43] = x[C.V2]
    x[C.K43] = x[C.K2]
    x[C.V44] = x[C.V1]
    x[C.K44] = x[C.K1]
    x[C.V45] = x[C.V2]
    x[C.K45] = x[C.K2]
    x[C.V46] = 0.1
    x[C.K46] = 10
    x[C.V47] = 0.1
    x[C.K47] = 10
    x[C.V48] = 0.1
    x[C.K48] = 10
    x[C.V49] = 0.1
    x[C.K49] = 10
    x[C.V50] = 0.1
    x[C.K50] = 10
    x[C.V51] = 0.1
    x[C.K51] = 10
    x[C.V52] = x[C.V1]
    x[C.K52] = x[C.K1]
    x[C.V53] = 0.1
    x[C.K53] = 10
    x[C.V54] = 0.1
    x[C.K54] = 10
    x[C.V55] = 0.1
    x[C.K55] = 10
    x[C.V56] = x[C.V1]
    x[C.K56] = x[C.K1]
    x[C.V57] = 0.1
    x[C.K57] = 10
    x[C.V58] = 0.1
    x[C.K58] = 10
    x[C.V59] = 0.1
    x[C.K59] = 10
    x[C.V60] = 0.1
    x[C.K60] = 10
    x[C.V61] = 0.1
    x[C.K61] = 10
    x[C.V62] = 0.5
    x[C.K62] = 10
    x[C.V63] = 0.5
    x[C.K63] = 10
    x[C.V64] = 0.1
    x[C.K64] = 10
    x[C.V65] = 0.1
    x[C.K65] = 10
    x[C.V66] = 0.1
    x[C.K66] = 10
    x[C.V67] = 0.1
    x[C.K67] = 10
    x[C.V68] = x[C.V1]
    x[C.K68] = x[C.K1]
    x[C.V69] = x[C.V2]
    x[C.K69] = x[C.K2]
    x[C.V70] = x[C.V1]
    x[C.K70] = x[C.K1]
    x[C.V71] = x[C.V2]
    x[C.K71] = x[C.K2]
    x[C.V72] = 0.1
    x[C.K72] = 10
    x[C.V73] = x[C.V1]
    x[C.K73] = x[C.K1]
    x[C.V74] = x[C.V2]
    x[C.K74] = x[C.K2]
    x[C.V75] = x[C.V1]
    x[C.K75] = x[C.K1]
    x[C.V76] = x[C.V2]
    x[C.K76] = x[C.K2]
    x[C.V77] = x[C.V1]
    x[C.K77] = x[C.K1]
    x[C.V78] = x[C.V2]
    x[C.K78] = x[C.K2]
    x[C.V79] = x[C.V1]
    x[C.K79] = x[C.K1]
    x[C.V80] = x[C.V2]
    x[C.K80] = x[C.K2]
    x[C.V81] = x[C.V1]
    x[C.K81] = x[C.K1]
    x[C.V82] = x[C.V2]
    x[C.K82] = x[C.K2]
    x[C.V83] = x[C.V1]
    x[C.K83] = x[C.K1]
    x[C.V84] = x[C.V2]
    x[C.K84] = x[C.K2]
    x[C.V85] = 0.1
    x[C.K85] = 10
    x[C.V86] = 0.1
    x[C.K86] = 10
    x[C.V87] = x[C.V1]
    x[C.K87] = x[C.K1]
    x[C.V88] = x[C.V2]
    x[C.K88] = x[C.K2]
    x[C.V89] = x[C.V1]
    x[C.K89] = x[C.K1]
    x[C.V90] = x[C.V2]
    x[C.K90] = x[C.K2]
    x[C.V91] = 0.5
    x[C.K91] = 10
    x[C.V92] = 0.5
    x[C.K92] = 10
    x[C.V93] = x[C.V1]
    x[C.K93] = x[C.K1]
    x[C.V94] = x[C.V2]
    x[C.K94] = x[C.K2]
    x[C.V95] = x[C.V1]
    x[C.K95] = x[C.K1]
    x[C.V96] = x[C.V2]
    x[C.K96] = x[C.K2]
    x[C.V97] = x[C.V1]
    x[C.K97] = x[C.K1]
    x[C.V98] = x[C.V2]
    x[C.K98] = x[C.K2]
    x[C.V99] = 0.1
    x[C.K99] = 10
    x[C.V100] = 0.1
    x[C.K100] = 10
    x[C.V101] = x[C.V1]
    x[C.K101] = x[C.K1]
    x[C.V102] = x[C.V2]
    x[C.K102] = x[C.K2]
    x[C.V103] = 0.1
    x[C.K103] = 10
    x[C.V104] = 0.1
    x[C.K104] = 10
    x[C.V105] = x[C.V1]
    x[C.K105] = x[C.K1]
    x[C.V106] = x[C.V2]
    x[C.K106] = x[C.K2]
    x[C.V107] = x[C.V1]
    x[C.K107] = x[C.K1]
    x[C.V108] = x[C.V2]
    x[C.K108] = x[C.K2]
    x[C.V109] = 0.1
    x[C.K109] = 10
    x[C.V110] = 0.1
    x[C.K110] = 10
    x[C.V111] = x[C.V1]
    x[C.K111] = x[C.K1]
    x[C.kf112] = 0.01
    x[C.kf113] = 0.01
    x[C.kf114] = 0.01
    x[C.kf115] = 0.01

    return x


def initial_values():
    """Values of the initial condition"""
    y0 = [0] * V.NUM
    y0[V.TGFA] = 0
    y0[V.EGFR_EGFR] = 1
    y0[V.NRG3] = 0
    y0[V.ERBB4_ERBB4] = 1
    y0[V.NRG2] = 0
    y0[V.ERBB3_ERBB3] = 1
    y0[V.HBEGF] = 0
    y0[V.EGF] = 1
    y0[V.SHC2_SHC4_SHC3_SHC1] = 1
    y0[V.PLCG1_PLCG2] = 1
    y0[V.CBL_CBLB] = 1
    y0[V.STAT5A_STAT5B] = 1
    y0[V.CRK_CRKL] = 1
    y0[V.SRC] = 1
    y0[V.NCK1_NCK2] = 1
    y0[V.PIK3CA_PIK3CB_PIK3CD_PIK3R1_PIK3R2_PIK3R3] = 1
    y0[V.AKT3_AKT1_AKT2] = 1
    y0[V.SOS1_SOS2] = 1
    y0[V.GAB1] = 1
    y0[V.CAMK2A_CAMK2B_CAMK2D_CAMK2G] = 1
    y0[V.PRKCA_PRKCB_PRKCG] = 1
    y0[V.MTOR] = 1
    y0[V.BAD] = 1
    y0[V.GSK3B] = 1
    y0[V.CDKN1B] = 1
    y0[V.CDKN1A] = 1
    y0[V.PAK4_BUB1B_PAK6_PAK1_PAK2_PAK3_PAK6_PAK5] = 1
    y0[V.HRAS_KRAS_NRAS] = 1
    y0[V.ABL1_ABL2] = 1
    y0[V.ARAF_RAF1_BRAF] = 1
    y0[V.RPS6KB1_RPS6KB2] = 1
    y0[V.EIF4EBP1] = 1
    y0[V.MAP2K7_MAP2K4] = 1
    y0[V.MAP2K1_MAP2K2] = 1
    y0[V.MAPK8_MAPK9_MAPK10] = 1
    y0[V.JUN] = 1
    y0[V.ELK1] = 1
    y0[V.MYC] = 1

    return y0
